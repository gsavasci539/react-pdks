{"version":3,"sources":["contexts/AuthContext.js","components/Layout.js","pages/Dashboard.js","pages/Employees.js","pages/Attendance.js","pages/LeaveRequests.js","pages/Login.js","pages/Salary.js","pages/RfidCards.js","App.js","index.js"],"names":["AuthContext","createContext","AuthProvider","_ref","children","user","setUser","useState","token","setToken","localStorage","getItem","value","login","async","email","password","response","axios","post","data","setItem","error","console","logout","removeItem","React","createElement","Provider","useAuth","context","useContext","Error","drawerWidth","AppBarStyled","styled","MuiAppBar","shouldForwardProp","prop","theme","open","transition","transitions","create","easing","sharp","duration","leavingScreen","width","marginLeft","easeOut","enteringScreen","boxShadow","shadows","DrawerHeader","_ref2","display","alignItems","padding","spacing","mixins","toolbar","justifyContent","FooterStyled","_ref3","backgroundColor","palette","background","paper","textAlign","Layout","useTheme","setOpen","subOpen","setSubOpen","navigate","useNavigate","location","useLocation","isMobile","setIsMobile","drawerRef","useRef","useEffect","handleResize","window","innerWidth","breakpoints","values","sm","addEventListener","handleClickOutsideDrawer","event","current","contains","target","handleDrawerClose","document","removeEventListener","menuItems","text","icon","Dashboard","path","People","AccessTime","EventNote","MonetizationOn","Settings","handleNavigation","Box","sx","flexDirection","minHeight","position","Toolbar","IconButton","color","aria-label","onClick","handleDrawerOpen","edge","mr","MenuIcon","Typography","variant","noWrap","component","flexGrow","Drawer","ref","flexShrink","& .MuiDrawer-paper","boxSizing","anchor","onClose","undefined","ChevronLeft","Divider","List","map","item","index","Fragment","key","ListItem","button","prevState","[object Object]","handleSubMenuToggle","ListItemIcon","ListItemText","primary","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","disablePadding","child","pl","pathname","action","selected","handleLogout","Logout","p","Outlet","align","Date","getFullYear","employeeCount","setEmployeeCount","leaveCount","setLeaveCount","projectCount","setProjectCount","departmentCount","setDepartmentCount","salaryAverage","setSalaryAverage","activeProjectCount","setActiveProjectCount","meetingRoomCount","setMeetingRoomCount","payrollCount","setPayrollCount","departmentData","setDepartmentData","hireDateData","setHireDateData","salaryData","setSalaryData","attendanceData","setAttendanceData","workingHoursData","setWorkingHoursData","selectedStat","setSelectedStat","openDialog","setOpenDialog","employeeData","setEmployeeData","leaveData","setLeaveData","projectData","setProjectData","meetingRoomData","setMeetingRoomData","payrollData","setPayrollData","selectedJsonData","setSelectedJsonData","openJsonTableDialog","setOpenJsonTableDialog","fetchEmployees","fetch","then","json","length","departments","Set","employee","Department","department","size","deptData","Array","from","dept","name","filter","emp","hireYearMap","forEach","rawDate","HireDate","hireDate","year","dateObj","isNaN","getTime","String","hireData","Object","keys","totalSalary","reduce","sum","Number","salary","base_salary","BaseSalary","salData","log","catch","fetchLeaves","fetchProjects","activeProjects","project","status","fetchMeetingRooms","fetchPayrolls","fetchAttendance","attendanceMap","Map","attendance","has","EmployeeID","EntryTime","get","set","formattedAttendanceData","employeeName","entryTime","formatDate","exitTime","ExitTime","totalHours","calculateTotalHours","intervalId","setInterval","clearInterval","result","row","total","parseFloat","overtime","toFixed","overtimeHours","dateString","date","getMonth","padStart","getDate","getHours","getMinutes","getSeconds","entry","stats","title","PeopleIcon","fontSize","details","EventNoteIcon","AssignmentIcon","WorkIcon","AttachMoneyIcon","MeetingRoomIcon","AccountBalanceWalletIcon","pieColors","handleCloseDialog","handleStatCardClick","handleCloseJsonTableDialog","Grid","container","stat","xs","md","Paper","elevation","Card","CardContent","mb","borderRadius","whiteSpace","overflow","textOverflow","gutterBottom","PieChart","height","Pie","dataKey","nameKey","cx","cy","outerRadius","fill","label","Cell","LineChart","CartesianGrid","strokeDasharray","XAxis","YAxis","Line","type","stroke","activeDot","r","BarChart","Bar","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","Dialog","DialogTitle","DialogContent","DialogActions","Button","fullWidth","maxWidth","cellIndex","Employees","employees","setEmployees","loading","setLoading","formData","setFormData","employee_id","first_name","last_name","phone","hire_date","editMode","setEditMode","rfidCards","setRfidCards","usedRfidCards","setUsedRfidCards","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","columns","field","headerName","flex","getActions","params","GridActionsCellItem","DeleteIcon","handleDelete","ID","EditIcon","handleEdit","fetchRfidCards","usedIds","handleClose","handleChange","e","delete","employeeId","FirstName","LastName","Position","Email","Phone","Status","availableRfidCards","card","includes","card_id","handleSnackbarClose","reason","handleOpen","CircularProgress","DataGrid","rows","pageSize","rowsPerPageOptions","checkboxSelection","disableSelectionOnClick","getRowId","autoHeight","mt","FormControl","margin","InputLabel","id","Select","labelId","onChange","disabled","required","MenuItem","TextField","InputLabelProps","shrink","preventDefault","put","message","request","Snackbar","autoHideDuration","Alert","severity","StyledTableRow","&:nth-of-type(odd)","hover","&:last-child td, &:last-child th","border","&:hover","StyledTableCell","fontWeight","Attendance","entries","setEntries","searchTerm","setSearchTerm","page","setPage","rowsPerPage","setRowsPerPage","setFilter","order","setOrder","orderBy","setOrderBy","selectedMonth","setSelectedMonth","selectedYear","setSelectedYear","today","isToday","isThisWeek","isSpecificMonth","isSpecificYear","filteredEntries","formattedEntries","TotalHours","sortedEntries","sortArray","toLocaleString","handleSort","property","array","slice","sort","a","b","isAsc","localeCompare","firstDayOfWeek","setDate","getDay","lastDayOfWeek","month","marginBottom","marginRight","minWidth","_","i","TableSortLabel","active","direction","visuallyHidden","scope","TablePagination","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","marginTop","LeaveRequests","requests","setRequests","leave_type","start_date","end_date","setError","success","setSuccess","setEmployeeId","selectedRequestId","setSelectedRequestId","deleteConfirmationOpen","setDeleteConfirmationOpen","requestIdToDelete","setRequestIdToDelete","useMediaQuery","renderCell","handleDeleteConfirmation","LeaveRequestID","fetchLeaveRequests","LeaveType","StartDate","EndDate","LeaveRequestStatus","overflowX","style","& .MuiDataGrid-columnHeaders","grey","employee_name","aria-labelledby","aria-describedby","DialogContentText","autoFocus","BackgroundBox","backgroundImage","backgroundSize","backgroundPosition","Login","setEmail","setPassword","Container","backdropFilter","onSubmit","err","autoComplete","helperText","SalaryCalculator","baseSalary","setBaseSalary","overtimeRate","setOvertimeRate","setOvertimeHours","setTotalSalary","setMessage","fetchOvertimeHoursData","currentMonth","toISOString","currentMonthOvertime","find","Month","OvertimeHours","toString","hourlyRate","overtime_rate","overtime_hours","total_salary","StyledPaper","RfidCardsPage","newCardId","setNewCardId","selectedCardId","setSelectedCardId","updateCardId","setUpdateCardId","deleteCardId","setDeleteCardId","confirmDialogOpen","setConfirmDialogOpen","pendingAction","setPendingAction","pendingActionData","setPendingActionData","selectedCardDetails","setSelectedCardDetails","isGetCardDetailsOpen","setIsGetCardDetailsOpen","apiBaseUrl","handleInputChange","showSnackbar","msg","handleCloseSnackbar","handleOpenConfirmDialog","arguments","handleCloseConfirmDialog","handleAddCardConfirmed","_err$response","_err$response$data","handleCloseGetCardDetails","handleUpdateCardConfirmed","_err$response3","_err$response3$data","handleDeleteCardConfirmed","_err$response4","_err$response4$data","handleAddCard","handleGetCard","_err$response2","_err$response2$data","handleDeleteCard","handleUpdateCard","anchorOrigin","vertical","horizontal","handleConfirmAction","rfid_card_id","createTheme","main","secondary","App","ThemeProvider","CssBaseline","Router","Routes","Route","element","RfidCards","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.02a652b6.chunk.js","sourcesContent":["import React, { createContext, useState, useContext } from 'react';\nimport axios from 'axios';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('http://89.252.184.134:5001/login', {\n        email,\n        password,\n      });\n      const { token } = response.data;\n      localStorage.setItem('token', token);\n      setToken(token);\n      return true;\n    } catch (error) {\n      console.error('Login error:', error);\n      return false;\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n  };\n\n  const value = {\n    user,\n    token,\n    login,\n    logout,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Outlet, useNavigate, useLocation } from 'react-router-dom';\nimport {\n  AppBar,\n  Box,\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Collapse,\n  Toolbar,\n  Typography,\n  Divider,\n} from '@mui/material';\nimport {\n  Menu as MenuIcon,\n  Dashboard,\n  People,\n  AccessTime,\n  EventNote,\n  Logout,\n  MonetizationOn,\n  ChevronLeft, // Kapatma ikonu\n  ExpandLess,\n  ExpandMore,\n  Settings, // Ayarlar ikonu\n} from '@mui/icons-material';\nimport { useAuth } from '../contexts/AuthContext';\nimport { styled, useTheme } from '@mui/material/styles';\nimport MuiAppBar from '@mui/material/AppBar';\n\nconst drawerWidth = 240;\n\nconst AppBarStyled = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== 'open',\n})(({ theme, open }) => ({\n  transition: theme.transitions.create(['margin', 'width'], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: `${drawerWidth}px`,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n  boxShadow: theme.shadows[4],\n}));\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(0, 1),\n  ...theme.mixins.toolbar,\n  justifyContent: 'flex-end',\n}));\n\nconst FooterStyled = styled('footer')(({ theme }) => ({\n  backgroundColor: theme.palette.background.paper,\n  padding: theme.spacing(2),\n  textAlign: 'center',\n}));\n\nfunction Layout() {\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n  const [subOpen, setSubOpen] = useState({});\n  const { logout } = useAuth();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [isMobile, setIsMobile] = useState(false);\n  const drawerRef = useRef(null);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= theme.breakpoints.values.sm);\n      if (window.innerWidth <= theme.breakpoints.values.sm) {\n        setOpen(false); // Mobil görünümde çekmeceyi otomatik olarak kapat\n      }\n    };\n\n    handleResize();\n    window.addEventListener('resize', handleResize);\n\n    const handleClickOutsideDrawer = (event) => {\n      if (isMobile && open && drawerRef.current && !drawerRef.current.contains(event.target)) {\n        handleDrawerClose();\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutsideDrawer);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      document.removeEventListener('mousedown', handleClickOutsideDrawer);\n    };\n  }, [theme.breakpoints.values.sm, isMobile, open]);\n\n  const menuItems = [\n    { text: 'Anasayfa', icon: <Dashboard />, path: '/' },\n    { text: 'Çalışanlar', icon: <People />, path: '/employees' },\n    { text: 'Giriş-Çıkış', icon: <AccessTime />, path: '/attendance' },\n    { text: 'İzin Talepleri', icon: <EventNote />, path: '/leave-requests' },\n    { text: 'Maaş', icon: <MonetizationOn />, path: '/salary' },\n    {\n      text: 'Ayarlar',\n      icon: <Settings />,\n      children: [\n        { text: 'RFID Kartlar', path: '/rfidcards' },\n        // Diğer ayarlar buraya eklenebilir\n      ],\n    },\n  ];\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n    setSubOpen({}); // Çekmece kapanınca alt menüleri de kapat\n  };\n\n  const handleSubMenuToggle = (index) => {\n    setSubOpen(prevState => ({\n      ...prevState,\n      [index]: !prevState[index],\n    }));\n  };\n\n  const handleNavigation = (path) => {\n    navigate(path);\n    if (isMobile) {\n      handleDrawerClose(); // Mobil görünümde navigasyon sonrası çekmeceyi kapat\n    }\n  };\n\n  const handleLogout = () => {\n    logout();\n    navigate('/login');\n  };\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', minHeight: '100vh' }}>\n      <AppBarStyled position=\"static\" open={open}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            sx={{ mr: 2, ...(open && { display: 'none' }) }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap component=\"div\">\n            PDKS System\n          </Typography>\n        </Toolbar>\n      </AppBarStyled>\n      <Box sx={{ display: 'flex', flexGrow: 1 }}>\n        <Drawer\n          ref={drawerRef}\n          sx={{\n            width: drawerWidth,\n            flexShrink: 0,\n            '& .MuiDrawer-paper': {\n              width: drawerWidth,\n              boxSizing: 'border-box',\n              backgroundColor: '#f5f5f5',\n            },\n          }}\n          variant={isMobile ? 'temporary' : 'persistent'} // Mobil için geçici, masaüstü için kalıcı\n          anchor=\"left\"\n          open={open}\n          onClose={isMobile ? handleDrawerClose : undefined} // Mobil için onClose prop'u ekle\n        >\n          <DrawerHeader>\n            <IconButton onClick={handleDrawerClose}>\n              <ChevronLeft />\n            </IconButton>\n          </DrawerHeader>\n          <Divider />\n          <List>\n            {menuItems.map((item, index) => (\n              <React.Fragment key={item.text}>\n                {item.children ? (\n                  <>\n                    <ListItem button onClick={() => handleSubMenuToggle(index)}>\n                      <ListItemIcon>{item.icon}</ListItemIcon>\n                      <ListItemText primary={item.text} />\n                      {subOpen[index] ? <ExpandLess /> : <ExpandMore />}\n                    </ListItem>\n                    <Collapse in={subOpen[index]} timeout=\"auto\" unmountOnExit>\n                      <List component=\"div\" disablePadding>\n                        {item.children.map((child) => (\n                          <ListItem\n                            button\n                            key={child.text}\n                            onClick={() => handleNavigation(child.path)}\n                            sx={{ pl: 4, backgroundColor: location.pathname === child.path ? theme.palette.action.selected : null }}\n                          >\n                            <ListItemText primary={child.text} />\n                          </ListItem>\n                        ))}\n                      </List>\n                    </Collapse>\n                  </>\n                ) : (\n                  <ListItem\n                    button\n                    onClick={() => handleNavigation(item.path)}\n                    sx={{ backgroundColor: location.pathname === item.path ? theme.palette.action.selected : null }}\n                  >\n                    <ListItemIcon>{item.icon}</ListItemIcon>\n                    <ListItemText primary={item.text} />\n                  </ListItem>\n                )}\n              </React.Fragment>\n            ))}\n            <Divider />\n            <ListItem button onClick={handleLogout}>\n              <ListItemIcon>\n                <Logout />\n              </ListItemIcon>\n              <ListItemText primary=\"Logout\" />\n            </ListItem>\n          </List>\n        </Drawer>\n        <Box\n          component=\"main\"\n          sx={{\n            flexGrow: 1,\n            p: 3,\n            transition: theme.transitions.create('margin', {\n              easing: theme.transitions.easing.sharp,\n              duration: theme.transitions.duration.leavingScreen,\n            }),\n            marginLeft: `-${drawerWidth}px`,\n            ...(open && !isMobile && { // Sadece masaüstünde açık olduğunda margin uygula\n              transition: theme.transitions.create('margin', {\n                easing: theme.transitions.easing.easeOut,\n                duration: theme.transitions.duration.enteringScreen,\n              }),\n              marginLeft: 0,\n            }),\n            ...(open && isMobile && { // Mobilde açık olduğunda margin sıfırla (geçici çekmece)\n              marginLeft: 0,\n            }),\n          }}\n        >\n          <DrawerHeader />\n          <Outlet />\n        </Box>\n      </Box>\n      <FooterStyled>\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n          {`Copyright © PDKS System By ByteBridge Software Solutions ${new Date().getFullYear()}`}\n        </Typography>\n      </FooterStyled>\n    </Box>\n  );\n}\n\nexport default Layout;","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n} from '@mui/material';\nimport {\n  People as PeopleIcon,\n  EventNote as EventNoteIcon,\n  Work as WorkIcon,\n  AttachMoney as AttachMoneyIcon,\n  Assignment as AssignmentIcon,\n  MeetingRoom as MeetingRoomIcon,\n  AccountBalanceWallet as AccountBalanceWalletIcon,\n} from '@mui/icons-material';\nimport { PieChart, Pie, Cell, LineChart, Line, XAxis, YAxis, CartesianGrid, BarChart, Bar } from 'recharts';\n\nfunction Dashboard() {\n  const [employeeCount, setEmployeeCount] = useState(0);\n  const [leaveCount, setLeaveCount] = useState(0);\n  const [projectCount, setProjectCount] = useState(0);\n  const [departmentCount, setDepartmentCount] = useState(0);\n  const [salaryAverage, setSalaryAverage] = useState(0);\n  const [activeProjectCount, setActiveProjectCount] = useState(0);\n  const [meetingRoomCount, setMeetingRoomCount] = useState(0);\n  const [payrollCount, setPayrollCount] = useState(0);\n  const [departmentData, setDepartmentData] = useState([]);\n  const [hireDateData, setHireDateData] = useState([]);\n  const [salaryData, setSalaryData] = useState([]);\n  const [attendanceData, setAttendanceData] = useState([]);\n  const [workingHoursData, setWorkingHoursData] = useState([]);\n  const [selectedStat, setSelectedStat] = useState(null);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [employeeData, setEmployeeData] = useState([]);\n  const [leaveData, setLeaveData] = useState([]);\n  const [projectData, setProjectData] = useState([]);\n  const [meetingRoomData, setMeetingRoomData] = useState([]);\n  const [payrollData, setPayrollData] = useState([]);\n  const [selectedJsonData, setSelectedJsonData] = useState(null);\n  const [openJsonTableDialog, setOpenJsonTableDialog] = useState(false);\n\n  useEffect(() => {\n    const fetchEmployees = () => {\n      fetch('http://89.252.184.134:5001/employees')\n        .then((response) => response.json())\n        .then((data) => {\n          setEmployeeCount(data.length);\n          // Departmanları büyük/küçük harf uyumlu al\n          const departments = new Set(data.map((employee) => employee.Department || employee.department));\n          setDepartmentCount(departments.size);\n          const deptData = Array.from(departments).map((dept) => ({\n            name: dept,\n            value: data.filter((emp) => (emp.Department || emp.department) === dept).length\n          }));\n          setDepartmentData(deptData);\n\n          // İŞE ALIM TARİHİ DAĞILIMI: Yıllara göre grupla\n          const hireYearMap = {};\n          data.forEach((emp) => {\n            let rawDate = emp.HireDate || emp.hireDate;\n            let year = 'Bilinmiyor';\n            if (rawDate && typeof rawDate === 'string') {\n              // Tarih stringinden yıl bilgisini al\n              const dateObj = new Date(rawDate);\n              if (!isNaN(dateObj.getTime())) {\n                year = String(dateObj.getFullYear());\n              }\n            }\n            if (!hireYearMap[year]) hireYearMap[year] = 0;\n            hireYearMap[year] += 1;\n          });\n          const hireData = Object.keys(hireYearMap).map((year) => ({\n            hireDate: year,\n            value: hireYearMap[year],\n          }));\n          setHireDateData(hireData);\n\n          const totalSalary = data.reduce((sum, employee) => sum + Number(employee.salary || employee.base_salary || employee.BaseSalary || 0), 0);\n          setSalaryAverage(data.length > 0 ? totalSalary / data.length : 0);\n\n          const salData = data.map((emp) => {\n            let salary = emp.salary || emp.base_salary || emp.BaseSalary || 0;\n            salary = isNaN(Number(salary)) ? 0 : Number(salary);\n            return { salary };\n          });\n          setSalaryData(salData);\n          setEmployeeData(data);\n          console.log('salaryData:', salData);\n        })\n        .catch((error) => {\n          console.error('Çalışan verileri alınırken hata oluştu:', error);\n        });\n    };\n\n    const fetchLeaves = () => {\n      fetch('http://89.252.184.134:5001/leave-requests')\n        .then((response) => response.json())\n        .then((data) => {\n          setLeaveCount(data.length);\n          setLeaveData(data);\n        })\n        .catch((error) => {\n          console.error('İzin verileri alınırken hata oluştu:', error);\n        });\n    };\n\n    const fetchProjects = () => {\n      fetch('http://89.252.184.134:5001/projects')\n        .then((response) => response.json())\n        .then((data) => {\n          setProjectCount(data.length);\n          const activeProjects = data.filter((project) => project.status === 'Active');\n          setActiveProjectCount(activeProjects.length);\n          setProjectData(data);\n        })\n        .catch((error) => {\n          console.error('Proje verileri alınırken hata oluştu:', error);\n        });\n    };\n\n    const fetchMeetingRooms = () => {\n      fetch('http://89.252.184.134:5001/meeting-rooms')\n        .then((response) => response.json())\n        .then((data) => {\n          setMeetingRoomCount(data.length);\n          setMeetingRoomData(data);\n        })\n        .catch((error) => {\n          console.error('Toplantı odası verileri alınırken hata oluştu:', error);\n        });\n    };\n\n    const fetchPayrolls = () => {\n      fetch('http://89.252.184.134:5001/payrolls')\n        .then((response) => response.json())\n        .then((data) => {\n          setPayrollCount(data.length);\n          setPayrollData(data);\n        })\n        .catch((error) => {\n          console.error('Bordro verileri alınırken hata oluştu:', error);\n        });\n    };\n\n    const fetchAttendance = () => {\n      fetch('http://89.252.184.134:5001/attendance')\n        .then((response) => response.json())\n        .then((data) => {\n          const attendanceMap = new Map();\n          data.attendance.forEach((item) => {\n            if (!attendanceMap.has(item.EmployeeID) || new Date(item.EntryTime) > new Date(attendanceMap.get(item.EmployeeID).EntryTime)) {\n              attendanceMap.set(item.EmployeeID, item);\n            }\n          });\n\n          const formattedAttendanceData = Array.from(attendanceMap.values()).map((item) => ({\n            employeeName: item.EmployeeID,\n            entryTime: formatDate(item.EntryTime),\n            exitTime: formatDate(item.ExitTime),\n            totalHours: calculateTotalHours(item.EntryTime, item.ExitTime),\n          }));\n          setAttendanceData(formattedAttendanceData);\n        })\n        .catch((error) => {\n          console.error('Giriş-çıkış verileri alınırken hata oluştu:', error);\n        });\n    };\n\n    fetchEmployees();\n    fetchLeaves();\n    fetchProjects();\n    fetchMeetingRooms();\n    fetchPayrolls();\n    fetchAttendance();\n\n    const intervalId = setInterval(() => {\n      fetchEmployees();\n      fetchLeaves();\n      fetchProjects();\n      fetchMeetingRooms();\n      fetchPayrolls();\n      fetchAttendance();\n    }, 10 * 60 * 1000);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  useEffect(() => {\n    const dailyHourLimit = 8;\n    const result = attendanceData.map((row) => {\n      const total = parseFloat(row.totalHours);\n      const overtime = total > dailyHourLimit ? (total - dailyHourLimit) : 0;\n      return {\n        employeeName: row.employeeName,\n        totalHours: total.toFixed(2),\n        overtimeHours: overtime.toFixed(2),\n      };\n    });\n    setWorkingHoursData(result);\n  }, [attendanceData]);\n\n  const formatDate = (dateString) => {\n    if (!dateString) {\n      return 'Bilinmiyor';\n    }\n    const date = new Date(dateString);\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    const year = date.getFullYear();\n    const hours = String(date.getHours()).padStart(2, '0');\n    const minutes = String(date.getMinutes()).padStart(2, '0');\n    const seconds = String(date.getSeconds()).padStart(2, '0');\n    return `${month}-${day}-${year} ${hours}:${minutes}:${seconds}`;\n  };\n\n  const calculateTotalHours = (entryTime, exitTime) => {\n    if (!entryTime || !exitTime) {\n      return 'Bilinmiyor';\n    }\n    const entry = new Date(entryTime);\n    const exit = new Date(exitTime);\n    const totalMilliseconds = exit - entry;\n    const totalHours = totalMilliseconds / (1000 * 60 * 60);\n    return totalHours.toFixed(2);\n  };\n\n  const stats = [\n    {\n      title: 'Toplam Çalışan',\n      value: employeeCount,\n      icon: <PeopleIcon sx={{ fontSize: 40 }} />,\n      color: '#1976d2',\n      details: `Toplam çalışan sayısı: ${employeeCount}`,\n    },\n    {\n      title: 'İzinli Çalışan',\n      value: leaveCount,\n      icon: <EventNoteIcon sx={{ fontSize: 40 }} />,\n      color: '#ed6c02',\n      details: `Toplam izinli çalışan sayısı: ${leaveCount}`,\n    },\n    {\n      title: 'Toplam Proje',\n      value: projectCount,\n      icon: <AssignmentIcon sx={{ fontSize: 40 }} />,\n      color: '#3f51b5',\n      details: `Toplam proje sayısı: ${projectCount}`,\n    },\n    {\n      title: 'Departmanlar',\n      value: departmentCount,\n      icon: <WorkIcon sx={{ fontSize: 40 }} />,\n      color: '#9c27b0',\n      details: `Toplam departman sayısı: ${departmentCount}`,\n    },\n    {\n      title: 'Ortalama Maaş',\n      value: `${salaryAverage.toFixed(2)} ₺`,\n      icon: <AttachMoneyIcon sx={{ fontSize: 40 }} />,\n      color: '#4caf50',\n      details: `Ortalama maaş: ${salaryAverage.toFixed(2)} ₺`,\n    },\n    {\n      title: 'Aktif Projeler',\n      value: activeProjectCount,\n      icon: <AssignmentIcon sx={{ fontSize: 40 }} />,\n      color: '#ff9800',\n      details: `Toplam aktif proje sayısı: ${activeProjectCount}`,\n    },\n    {\n      title: 'Toplantı Odaları',\n      value: meetingRoomCount,\n      icon: <MeetingRoomIcon sx={{ fontSize: 40 }} />,\n      color: '#00bcd4',\n      details: `Toplam toplantı odası sayısı: ${meetingRoomCount}`,\n    },\n    {\n      title: 'Bordrolar',\n      value: payrollCount,\n      icon: <AccountBalanceWalletIcon sx={{ fontSize: 40 }} />,\n      color: '#ff5722',\n      details: `Toplam bordro sayısı: ${payrollCount}`,\n    },\n  ];\n\n  const pieColors = ['#1976d2', '#ed6c02', '#3f51b5', '#9c27b0', '#4caf50', '#ff9800', '#00bcd4', '#ff5722'];\n\n  const handleCardClick = (stat) => {\n    setSelectedStat(stat);\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  const handleStatCardClick = (data) => {\n    setSelectedJsonData(data);\n    setOpenJsonTableDialog(true);\n  };\n\n  const handleCloseJsonTableDialog = () => {\n    setOpenJsonTableDialog(false);\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={3}>\n        {stats.map((stat) => (\n          <Grid item xs={12} sm={6} md={3} key={stat.title}>\n            <Paper elevation={3}>\n              <Card onClick={() => {\n                if (stat.title === 'Toplam Çalışan') {\n                  handleStatCardClick(employeeData);\n                } else if (stat.title === 'İzinli Çalışan') {\n                  handleStatCardClick(leaveData);\n                } else if (stat.title === 'Toplam Proje') {\n                  handleStatCardClick(projectData);\n                } else if (stat.title === 'Toplantı Odaları') {\n                  handleStatCardClick(meetingRoomData);\n                } else if (stat.title === 'Bordrolar') {\n                  handleStatCardClick(payrollData);\n                }\n              }}>\n                <CardContent>\n                  <Box\n                    sx={{\n                      display: 'flex',\n                      alignItems: 'center',\n                      mb: 1,\n                    }}\n                  >\n                    <Box\n                      sx={{\n                        backgroundColor: stat.color,\n                        borderRadius: 1,\n                        p: 1,\n                        color: 'white',\n                        mr: 2,\n                      }}\n                    >\n                      {stat.icon}\n                    </Box>\n                    <Box>\n                      <Typography variant=\"h4\" component=\"div\" sx={{ whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' }}>\n                        {stat.value}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        {stat.title}\n                      </Typography>\n                    </Box>\n                  </Box>\n                </CardContent>\n              </Card>\n            </Paper>\n          </Grid>\n        ))}\n        <Grid item xs={12} md={6}>\n          <Paper elevation={3}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" component=\"div\" gutterBottom>\n                  Departman Dağılımı\n                </Typography>\n                <PieChart width={400} height={300}>\n                  <Pie\n                    data={departmentData}\n                    dataKey=\"value\"\n                    nameKey=\"name\"\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    outerRadius={80}\n                    fill=\"#8884d8\"\n                    label={({ name, value }) => `${name}: ${value}`}\n                  >\n                    {departmentData.map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={pieColors[index % pieColors.length]} />\n                    ))}\n                  </Pie>\n                </PieChart>\n              </CardContent>\n            </Card>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Paper elevation={3}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" component=\"div\" gutterBottom>\n                  İşe Alım Tarihi Dağılımı\n                </Typography>\n                <LineChart width={400} height={300} data={hireDateData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"hireDate\" />\n                  <YAxis />\n                  <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n                </LineChart>\n              </CardContent>\n            </Card>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Paper elevation={3}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" component=\"div\" gutterBottom>\n                  Maaş Dağılımı\n                </Typography>\n                <BarChart width={400} height={300} data={salaryData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"salary\" />\n                  <YAxis />\n                  <Bar dataKey=\"salary\" fill=\"#8884d8\" />\n                </BarChart>\n              </CardContent>\n            </Card>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Paper elevation={3}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" component=\"div\" gutterBottom>\n                  Giriş-Çıkış Tablosu\n                </Typography>\n                <TableContainer>\n                  <Table>\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Çalışan Adı</TableCell>\n                        <TableCell>Giriş Saati</TableCell>\n                        <TableCell>Çıkış Saati</TableCell>\n                        <TableCell>Toplam Çalışma Süresi</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {attendanceData.map((row) => (\n                        <TableRow key={row.employeeName}>\n                          <TableCell>{row.employeeName}</TableCell>\n                          <TableCell>{row.entryTime}</TableCell>\n                          <TableCell>{row.exitTime}</TableCell>\n                          <TableCell>{row.totalHours}</TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </CardContent>\n            </Card>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Paper elevation={3}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" component=\"div\" gutterBottom>\n                  Çalışma Süresi Tablosu\n                </Typography>\n                <TableContainer>\n                  <Table>\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Çalışan Adı</TableCell>\n                        <TableCell>Toplam Çalışma Süresi</TableCell>\n                        <TableCell>Fazla Mesai Süresi</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {workingHoursData.map((row) => (\n                        <TableRow key={row.employeeName}>\n                          <TableCell>{row.employeeName}</TableCell>\n                          <TableCell>{row.totalHours}</TableCell>\n                          <TableCell>{row.overtimeHours}</TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </CardContent>\n            </Card>\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper elevation={3}>\n\n          </Paper>\n        </Grid>\n      </Grid>\n      <Dialog open={openDialog} onClose={handleCloseDialog}>\n        <DialogTitle>{selectedStat?.title}</DialogTitle>\n        <DialogContent>\n          <Typography>{selectedStat?.details}</Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog} color=\"primary\">\n            Kapat\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog open={openJsonTableDialog} onClose={handleCloseJsonTableDialog} fullWidth maxWidth=\"md\">\n        <DialogTitle>JSON Verileri</DialogTitle>\n        <DialogContent>\n          {selectedJsonData && (\n            <TableContainer>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {Object.keys(selectedJsonData[0]).map((key) => (\n                      <TableCell key={key}>{key}</TableCell>\n                    ))}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {selectedJsonData.map((row, index) => (\n                    <TableRow key={index}>\n                      {Object.values(row).map((value, cellIndex) => (\n                        <TableCell key={cellIndex}>{String(value)}</TableCell>\n                      ))}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseJsonTableDialog} color=\"primary\">\n            Kapat\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n}\n\nexport default Dashboard;","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  Paper,\n  CircularProgress,\n  IconButton,\n  MenuItem,\n  Select,\n  FormControl,\n  InputLabel,\n  Snackbar,\n  Alert,\n} from '@mui/material';\nimport { DataGrid, GridActionsCellItem } from '@mui/x-data-grid';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport axios from 'axios';\n\nfunction Employees() {\n  const [employees, setEmployees] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [formData, setFormData] = useState({\n    employee_id: '',\n    first_name: '',\n    last_name: '',\n    department: '',\n    position: '',\n    email: '',\n    phone: '',\n    hire_date: '',\n    status: 'Active',\n    base_salary: '',\n  });\n  const [editMode, setEditMode] = useState(false);\n  const [rfidCards, setRfidCards] = useState([]);\n  const [usedRfidCards, setUsedRfidCards] = useState([]);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const [snackbarSeverity, setSnackbarSeverity] = useState('error');\n\n  const columns = [\n    { field: 'ID', headerName: 'ID', width: 70 },\n    { field: 'FirstName', headerName: 'Adı', flex: 1 },\n    { field: 'LastName', headerName: 'Soyadı', flex: 1 },\n    { field: 'Department', headerName: 'Departman', flex: 1 },\n    { field: 'Position', headerName: 'Pozisyon', flex: 1 },\n    { field: 'Email', headerName: 'E-posta', flex: 1 },\n    { field: 'Phone', headerName: 'Telefon', flex: 1 },\n    { field: 'HireDate', headerName: 'İşe Giriş Tarihi', flex: 1 },\n    { field: 'Status', headerName: 'Durum', flex: 1 },\n    { field: 'BaseSalary', headerName: 'Temel Maaş', flex: 1 },\n    {\n      field: 'actions',\n      type: 'actions',\n      width: 100,\n      getActions: (params) => [\n        <GridActionsCellItem icon={<DeleteIcon />} label=\"Delete\" onClick={() => handleDelete(params.row.ID)} />,\n        <GridActionsCellItem icon={<EditIcon />} label=\"Edit\" onClick={() => handleEdit(params.row)} />,\n      ],\n    },\n  ];\n\n  useEffect(() => {\n    fetchEmployees();\n    fetchRfidCards();\n  }, []);\n\n  const fetchEmployees = async () => {\n    try {\n      const response = await axios.get('http://89.252.184.134:5001/employees');\n      setEmployees(response.data);\n      setLoading(false);\n      const usedIds = response.data.map((employee) => employee.ID);\n      setUsedRfidCards(usedIds);\n    } catch (error) {\n      console.error('Error fetching employees:', error);\n      setLoading(false);\n    }\n  };\n\n  const fetchRfidCards = async () => {\n    try {\n      const response = await axios.get('http://89.252.184.134:5001/rfidcards');\n      setRfidCards(response.data);\n    } catch (error) {\n      console.error('Error fetching RFID cards:', error);\n    }\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n    setEditMode(false);\n    setFormData({\n      employee_id: '',\n      first_name: '',\n      last_name: '',\n      department: '',\n      position: '',\n      email: '',\n      phone: '',\n      hire_date: '',\n      status: 'Active',\n      base_salary: '',\n    });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleDelete = async (employeeId) => {\n    try {\n      await axios.delete(`http://89.252.184.134:5001/employees/${employeeId}`);\n      fetchEmployees();\n      fetchRfidCards(); // Re-fetch RFID cards after deleting an employee\n    } catch (error) {\n      console.error('Error deleting employee:', error);\n      setSnackbarMessage('Error deleting employee.');\n      setSnackbarSeverity('error');\n      setSnackbarOpen(true);\n    }\n  };\n\n  const handleEdit = (row) => {\n    setFormData({\n      employee_id: row.ID,\n      first_name: row.FirstName,\n      last_name: row.LastName,\n      department: row.Department,\n      position: row.Position,\n      email: row.Email,\n      phone: row.Phone,\n      hire_date: row.HireDate,\n      status: row.Status,\n      base_salary: row.BaseSalary,\n    });\n    setEditMode(true);\n    setOpen(true);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (editMode) {\n        await axios.put(`http://89.252.184.134:5001/employees/${formData.employee_id}`, formData);\n        setSnackbarMessage('Employee updated successfully.');\n        setSnackbarSeverity('success');\n      } else {\n        await axios.post('http://89.252.184.134:5001/employees', formData);\n        setSnackbarMessage('Employee added successfully.');\n        setSnackbarSeverity('success');\n      }\n      fetchEmployees();\n      fetchRfidCards(); // Re-fetch RFID cards after adding/updating an employee\n      handleClose();\n      setSnackbarOpen(true);\n    } catch (error) {\n      console.error('Error:', error);\n      if (error.response) {\n        console.error('Server responded with:', error.response.data);\n        setSnackbarMessage(error.response.data.message || 'Kart Mevcut Lütfen Başka Bir Kart Seçin');\n      } else if (error.request) {\n        setSnackbarMessage('Error: No response received from the server.');\n      } else {\n        setSnackbarMessage('Error: An error occurred while setting up the request.');\n      }\n      setSnackbarSeverity('error');\n      setSnackbarOpen(true);\n    }\n  };\n\n  const availableRfidCards = rfidCards.filter((card) => !usedRfidCards.includes(card.card_id));\n\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackbarOpen(false);\n  };\n\n  return (\n    <Box sx={{ height: '80vh', width: '100%' }}>\n      <Box sx={{ mb: 2 }}>\n        <Button variant=\"contained\" onClick={handleOpen}>\n          ÇALIŞAN EKLE\n        </Button>\n      </Box>\n      <Paper elevation={3}>\n        {loading ? (\n          <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: 400 }}>\n            <CircularProgress />\n          </Box>\n        ) : (\n          <DataGrid\n            rows={employees}\n            columns={columns}\n            pageSize={10}\n            rowsPerPageOptions={[10]}\n            checkboxSelection\n            disableSelectionOnClick\n            getRowId={(row) => row.ID}\n            autoHeight\n          />\n        )}\n      </Paper>\n\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>{editMode ? 'Edit Employee' : 'Add New Employee'}</DialogTitle>\n        <DialogContent>\n          <Box component=\"form\" sx={{ mt: 1 }}>\n            <FormControl fullWidth margin=\"normal\">\n              <InputLabel id=\"employee-id-label\">Employee ID</InputLabel>\n              <Select\n                labelId=\"employee-id-label\"\n                id=\"employee_id\"\n                name=\"employee_id\"\n                value={formData.employee_id}\n                onChange={handleChange}\n                disabled={editMode}\n                required\n              >\n                {availableRfidCards.length > 0 ? (\n                  availableRfidCards.map((card) => (\n                    <MenuItem key={card.card_id} value={card.card_id}>\n                      {card.card_id}\n                    </MenuItem>\n                  ))\n                ) : (\n                  <MenuItem disabled value=\"\">\n                    No available RFID cards\n                  </MenuItem>\n                )}\n              </Select>\n            </FormControl>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"first_name\"\n              label=\"Adı\"\n              value={formData.first_name}\n              onChange={handleChange}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"last_name\"\n              label=\"Soyadı\"\n              value={formData.last_name}\n              onChange={handleChange}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"department\"\n              label=\"Departman\"\n              value={formData.department}\n              onChange={handleChange}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"position\"\n              label=\"Pozisyon\"\n              value={formData.position}\n              onChange={handleChange}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"email\"\n              label=\"E-posta\"\n              type=\"email\"\n              value={formData.email}\n              onChange={handleChange}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"phone\"\n              label=\"Telefon\"\n              value={formData.phone}\n              onChange={handleChange}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"hire_date\"\n              label=\"İşer Giriş Tarihi\"\n              type=\"date\"\n              value={formData.hire_date}\n              onChange={handleChange}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"status\"\n              label=\"Durum\"\n              value={formData.status}\n              onChange={handleChange}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"base_salary\"\n              label=\"Maaş\"\n              value={formData.base_salary}\n              onChange={handleChange}\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Vazgeç</Button>\n          <Button onClick={handleSubmit} variant=\"contained\">\n            {editMode ? 'Güncelle' : 'Ekle'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Snackbar open={snackbarOpen} autoHideDuration={6000} onClose={handleSnackbarClose}>\n        <Alert onClose={handleSnackbarClose} severity={snackbarSeverity} sx={{ width: '100%' }}>\n          {snackbarMessage}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n}\n\nexport default Employees;","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Paper,\n  Grid,\n  Typography,\n  TextField,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TablePagination,\n  styled,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  TableSortLabel,\n} from '@mui/material';\nimport axios from 'axios';\nimport { visuallyHidden } from '@mui/utils';\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  '&:nth-of-type(odd)': {\n    backgroundColor: theme.palette.action.hover,\n  },\n  '&:last-child td, &:last-child th': {\n    border: 0,\n  },\n  '&:hover': {\n    backgroundColor: '#f0f0f0',\n  },\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  fontWeight: 'bold',\n  color: '#333',\n}));\n\nfunction Attendance() {\n  const [entries, setEntries] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [filter, setFilter] = useState('daily');\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState('EmployeeID');\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth());\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\n\n  useEffect(() => {\n    fetchAttendance();\n  }, [searchTerm, page, rowsPerPage, filter, order, orderBy, selectedMonth, selectedYear]);\n\n  useEffect(() => {\n    // Filtre veya ay/yıl değiştiğinde güncel zamanı al\n    const today = new Date();\n    if (filter === 'monthly') {\n      setSelectedMonth(today.getMonth());\n      setSelectedYear(today.getFullYear());\n    } else if (filter === 'yearly') {\n      setSelectedYear(today.getFullYear());\n    }\n  }, [filter]);\n\n  const fetchAttendance = async () => {\n    try {\n      const response = await axios.get('http://89.252.184.134:5001/attendance');\n      let attendanceData = response.data.attendance;\n\n      if (filter === 'daily') {\n        attendanceData = attendanceData.filter((entry) => isToday(new Date(entry.EntryTime)));\n      } else if (filter === 'weekly') {\n        attendanceData = attendanceData.filter((entry) => isThisWeek(new Date(entry.EntryTime)));\n      } else if (filter === 'monthly') {\n        attendanceData = attendanceData.filter((entry) =>\n          isSpecificMonth(new Date(entry.EntryTime), selectedMonth, selectedYear)\n        );\n      } else if (filter === 'yearly') {\n        attendanceData = attendanceData.filter((entry) => isSpecificYear(new Date(entry.EntryTime), selectedYear));\n        if (selectedMonth !== null) {\n          attendanceData = attendanceData.filter((entry) =>\n            isSpecificMonth(new Date(entry.EntryTime), selectedMonth, selectedYear)\n          );\n        }\n      }\n\n      let filteredEntries = attendanceData;\n\n      if (searchTerm) {\n        filteredEntries = attendanceData.filter((entry) => String(entry.EmployeeID).includes(searchTerm));\n      }\n\n      const formattedEntries = filteredEntries.map((entry) => ({\n        id: entry.ID,\n        EmployeeID: entry.EmployeeID,\n        EntryTime: formatDate(entry.EntryTime),\n        ExitTime: formatDate(entry.ExitTime),\n        TotalHours: calculateTotalHours(entry.EntryTime, entry.ExitTime),\n      }));\n\n      const sortedEntries = sortArray(formattedEntries, orderBy, order);\n      setEntries(sortedEntries);\n    } catch (error) {\n      console.error('Error fetching attendance:', error);\n    }\n  };\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n\n  const calculateTotalHours = (entryTime, exitTime) => {\n    const entry = new Date(entryTime);\n    const exit = new Date(exitTime);\n\n    const totalMilliseconds = exit - entry;\n    const totalHours = totalMilliseconds / (1000 * 60 * 60);\n    return totalHours.toFixed(2);\n  };\n\n  const handleSearchChange = (event) => {\n    setSearchTerm(event.target.value);\n    setPage(0);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value);\n    setPage(0);\n  };\n\n  const handleSort = (property) => (event) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const sortArray = (array, property, order) => {\n    return array.slice().sort((a, b) => {\n      const isAsc = order === 'asc';\n      if (property === 'TotalHours') {\n        return isAsc ? parseFloat(a[property]) - parseFloat(b[property]) : parseFloat(b[property]) - parseFloat(a[property]);\n      } else {\n        return isAsc ? String(a[property]).localeCompare(String(b[property])) : String(b[property]).localeCompare(String(a[property]));\n      }\n    });\n  };\n\n  const isToday = (date) => {\n    const today = new Date();\n    return date.getDate() === today.getDate() && date.getMonth() === today.getMonth() && date.getFullYear() === today.getFullYear();\n  };\n\n  const isThisWeek = (date) => {\n    const today = new Date();\n    const firstDayOfWeek = new Date(today.setDate(today.getDate() - today.getDay()));\n    const lastDayOfWeek = new Date(today.setDate(today.getDate() - today.getDay() + 6));\n    return date >= firstDayOfWeek && date <= lastDayOfWeek;\n  };\n\n  const isSpecificMonth = (date, month, year) => {\n    return date.getMonth() === month && date.getFullYear() === year;\n  };\n\n  const isSpecificYear = (date, year) => {\n    return date.getFullYear() === year;\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1, padding: 3 }}>\n      <Grid item xs={12}>\n        <Typography variant=\"h4\" gutterBottom>\n          GİRİŞ ÇIKIŞ LİSTESİ\n        </Typography>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', marginBottom: 2 }}>\n          <TextField label=\"Çalışan ID Ara\" variant=\"outlined\" value={searchTerm} onChange={handleSearchChange} sx={{ flex: 1, marginRight: 2 }} />\n          <FormControl variant=\"outlined\" sx={{ minWidth: 120, marginRight: 2 }}>\n            <InputLabel id=\"filter-label\">Filtre</InputLabel>\n            <Select labelId=\"filter-label\" id=\"filter\" value={filter} onChange={handleFilterChange} label=\"Filtre\">\n              <MenuItem value=\"daily\">Günlük</MenuItem>\n              <MenuItem value=\"weekly\">Haftalık</MenuItem>\n              <MenuItem value=\"monthly\">Aylık</MenuItem>\n              <MenuItem value=\"yearly\">Yıllık</MenuItem>\n            </Select>\n          </FormControl>\n          {(filter === 'monthly' || filter === 'yearly') && (\n            <FormControl variant=\"outlined\" sx={{ minWidth: 120 }}>\n              <InputLabel id=\"month-label\">Ay</InputLabel>\n              <Select labelId=\"month-label\" id=\"month\" value={selectedMonth} onChange={(e) => setSelectedMonth(e.target.value)} label=\"Ay\">\n                {Array.from({ length: 12 }, (_, i) => i).map((month) => (\n                  <MenuItem key={month} value={month}>\n                    {new Date(0, month).toLocaleString('default', { month: 'long' })}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          )}\n          {filter === 'yearly' && (\n            <FormControl variant=\"outlined\" sx={{ minWidth: 120 }}>\n              <InputLabel id=\"year-label\">Yıl</InputLabel>\n              <Select labelId=\"year-label\" id=\"year\" value={selectedYear} onChange={(e) => setSelectedYear(e.target.value)} label=\"Yıl\">\n                {Array.from({ length: 10 }, (_, i) => new Date().getFullYear() - i).map((year) => (\n                  <MenuItem key={year} value={year}>\n                    {year}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          )}\n        </Box>\n        <TableContainer component={Paper} elevation={3}>\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <StyledTableCell>ID</StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  <TableSortLabel active={orderBy === 'EmployeeID'} direction={orderBy === 'EmployeeID' ? order : 'asc'} onClick={handleSort('EmployeeID')}>\n                    Çalışan ID\n                    {orderBy === 'EmployeeID' ? <Box component=\"span\" sx={visuallyHidden}>{order === 'desc' ? 'sorted descending' : 'sorted ascending'}</Box> : null}\n                  </TableSortLabel>\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  <TableSortLabel active={orderBy === 'EntryTime'} direction={orderBy === 'EntryTime' ? order : 'asc'} onClick={handleSort('EntryTime')}>\n                    Giriş Zamanı\n                    {orderBy === 'EntryTime' ? <Box component=\"span\" sx={visuallyHidden}>{order === 'desc' ? 'sorted descending' : 'sorted ascending'}</Box> : null}\n                  </TableSortLabel>\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  <TableSortLabel active={orderBy === 'ExitTime'} direction={orderBy === 'ExitTime' ? order : 'asc'} onClick={handleSort('ExitTime')}>\n                    Çıkış Zamanı\n                    {orderBy === 'ExitTime' ? <Box component=\"span\" sx={visuallyHidden}>{order === 'desc' ? 'sorted descending' : 'sorted ascending'}</Box> : null}\n                  </TableSortLabel>\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  <TableSortLabel active={orderBy === 'TotalHours'} direction={orderBy === 'TotalHours' ? order : 'asc'} onClick={handleSort('TotalHours')}>\n                    Toplam Saat\n                    {orderBy === 'TotalHours' ? <Box component=\"span\" sx={visuallyHidden}>{order === 'desc' ? 'sorted descending' : 'sorted ascending'}</Box> : null}\n                  </TableSortLabel>\n                </StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {entries.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                <StyledTableRow key={row.id}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.id}\n                  </TableCell>\n                  <TableCell align=\"right\">{row.EmployeeID}</TableCell>\n                  <TableCell align=\"right\">{row.EntryTime}</TableCell>\n                  <TableCell align=\"right\">{row.ExitTime}</TableCell>\n                  <TableCell align=\"right\">{row.TotalHours}</TableCell>\n                </StyledTableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination rowsPerPageOptions={[5, 10, 25]} component=\"div\" count={entries.length} rowsPerPage={rowsPerPage} page={page} onPageChange={handleChangePage} onRowsPerPageChange={handleChangeRowsPerPage} sx={{ marginTop: 2 }} />\n      </Grid>\n    </Box>\n  );\n}\n\nexport default Attendance;","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  MenuItem,\n  Paper,\n  FormControl,\n  InputLabel,\n  Select,\n  Snackbar,\n  Alert,\n  CircularProgress,\n  IconButton,\n  useMediaQuery,\n  DialogContentText,\n} from '@mui/material';\nimport { DataGrid } from '@mui/x-data-grid';\nimport axios from 'axios';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nfunction LeaveRequests() {\n  const [requests, setRequests] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [formData, setFormData] = useState({\n    leave_type: '',\n    start_date: '',\n    end_date: '',\n    status: 'Pending',\n  });\n  const [employees, setEmployees] = useState([]);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [employeeId, setEmployeeId] = useState('');\n  const [editMode, setEditMode] = useState(false);\n  const [selectedRequestId, setSelectedRequestId] = useState(null);\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\n  const [requestIdToDelete, setRequestIdToDelete] = useState(null);\n\n  const leaveTypes = [\n    'Yıllık İzin',\n    'Hastalık İzni',\n    'Kişisel İzin',\n    'Doğum İzni (Annelik)',\n    'Doğum İzni (Babalık)',\n  ];\n\n  const isSmallScreen = useMediaQuery('(max-width: 600px)');\n\n  const columns = [\n    { field: 'LeaveRequestID', headerName: 'ID', width: 90 },\n    { field: 'FirstName', headerName: 'Adı', flex: 1, minWidth: 100 },\n    { field: 'LastName', headerName: 'Soyadı', flex: 1, minWidth: 100 },\n    { field: 'EmployeeID', headerName: 'Çalışan ID', flex: 1, minWidth: 130 },\n    { field: 'LeaveType', headerName: 'İzin Türü', flex: 1, minWidth: 120 },\n    { field: 'StartDate', headerName: 'Başlangıç Tarihi', flex: 1, minWidth: 120 },\n    { field: 'EndDate', headerName: 'Bitiş Tarihi', flex: 1, minWidth: 120 },\n    {\n      field: 'actions',\n      headerName: 'İşlemler',\n      width: isSmallScreen ? 80 : 100,\n      renderCell: (params) => (\n        <div>\n          <IconButton aria-label=\"düzenle\" onClick={() => handleEdit(params.row)}>\n            <EditIcon />\n          </IconButton>\n          <IconButton aria-label=\"sil\" onClick={() => handleDeleteConfirmation(params.row.LeaveRequestID)} color=\"error\">\n            <DeleteIcon />\n          </IconButton>\n        </div>\n      ),\n    },\n  ];\n\n  useEffect(() => {\n    fetchLeaveRequests();\n    fetchEmployees();\n  }, []);\n\n  const fetchLeaveRequests = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.get('http://89.252.184.134:5001/leave-requests');\n      setRequests(response.data);\n    } catch (error) {\n      setError('İzin istekleri alınırken bir hata oluştu.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchEmployees = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.get('http://89.252.184.134:5001/employee');\n      setEmployees(response.data);\n    } catch (error) {\n      setError('Çalışanlar alınırken bir hata oluştu.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setFormData({\n      leave_type: '',\n      start_date: '',\n      end_date: '',\n      status: 'Pending',\n    });\n    setEmployeeId('');\n    setError(null);\n    setEditMode(false);\n    setSelectedRequestId(null);\n  };\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!employeeId || !formData.leave_type || !formData.start_date || !formData.end_date) {\n      setError('Lütfen tüm alanları doldurun.');\n      return;\n    }\n    if (new Date(formData.start_date) > new Date(formData.end_date)) {\n      setError('Başlangıç tarihi bitiş tarihinden sonra olamaz.');\n      return;\n    }\n    try {\n      if (editMode) {\n        await axios.put(`http://89.252.184.134:5001/leave-requests/${selectedRequestId}`, {\n          ...formData,\n          employee_id: employeeId,\n        });\n      } else {\n        await axios.post('http://89.252.184.134:5001/leave-requests', {\n          ...formData,\n          employee_id: employeeId,\n        });\n      }\n      fetchLeaveRequests();\n      handleClose();\n      setSuccess(true);\n    } catch (error) {\n      setError('İzin isteği gönderilirken bir hata oluştu.');\n    }\n  };\n\n  const handleEdit = (row) => {\n    setEditMode(true);\n    setSelectedRequestId(row.LeaveRequestID);\n    setEmployeeId(row.EmployeeID);\n    setFormData({\n      employee_id: row.EmployeeID,\n      first_name: row.FirstName,\n      last_name: row.LastName,\n      leave_type: row.LeaveType,\n      start_date: row.StartDate,\n      end_date: row.EndDate,\n      status: row.LeaveRequestStatus,\n    });\n    handleOpen();\n  };\n\n  const handleDeleteConfirmation = (id) => {\n    setRequestIdToDelete(id);\n    setDeleteConfirmationOpen(true);\n  };\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`http://89.252.184.134:5001/leave-requests/${requestIdToDelete}`);\n      fetchLeaveRequests();\n      setSuccess(true);\n    } catch (error) {\n      setError('İzin isteği silinirken bir hata oluştu.');\n    } finally {\n      setDeleteConfirmationOpen(false);\n      setRequestIdToDelete(null);\n    }\n  };\n\n  return (\n    <Box sx={{ width: '100%' }}>\n      <Box sx={{ mb: 2 }}>\n        <Button variant=\"contained\" onClick={handleOpen}>\n          YENİ İZİN İSTEĞİ\n        </Button>\n      </Box>\n      <Paper elevation={3} sx={{ width: '100%', overflowX: 'auto' }}>\n        {loading ? (\n          <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: 400 }}>\n            <CircularProgress />\n          </Box>\n        ) : (\n          <div style={{ width: '100%' }}>\n            <DataGrid\n              rows={requests}\n              columns={columns}\n              pageSize={10}\n              rowsPerPageOptions={[10]}\n              disableSelectionOnClick\n              getRowId={(row) => row.LeaveRequestID}\n              autoHeight\n              sx={{\n                '& .MuiDataGrid-columnHeaders': {\n                  backgroundColor: (theme) => theme.palette.grey[200],\n                },\n              }}\n            />\n          </div>\n        )}\n      </Paper>\n\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>{editMode ? 'İzin İsteğini Düzenle' : 'İzin İsteği Gönder'}</DialogTitle>\n        <DialogContent>\n          <Box component=\"form\" sx={{ mt: 1 }}>\n            <FormControl fullWidth margin=\"normal\">\n              <InputLabel id=\"employee-id-label\">Çalışan Seçin</InputLabel>\n           <Select\n                            labelId=\"employee-id-label\"\n                            id=\"employee-id\"\n                            value={employeeId}\n                            label=\"Çalışan Seçin\"\n                            onChange={(e) => setEmployeeId(e.target.value)}\n                          >\n                            {employees.map((employee) => (\n                              <MenuItem key={employee.employee_id} value={employee.employee_id}>\n                                {employee.employee_name} ({employee.employee_id})\n                              </MenuItem>\n                            ))}\n                          </Select>\n            </FormControl>\n            <FormControl fullWidth margin=\"normal\">\n              <InputLabel id=\"leave-type-label\">İzin Türü Seçin</InputLabel>\n              <Select\n                labelId=\"leave-type-label\"\n                id=\"leave-type\"\n                name=\"leave_type\"\n                value={formData.leave_type}\n                label=\"İzin Türü Seçin\"\n                onChange={handleChange}\n              >\n                {leaveTypes.map((type) => (\n                  <MenuItem key={type} value={type}>\n                    {type}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"start_date\"\n              label=\"Başlangıç Tarihi\"\n              type=\"datetime-local\"\n              value={formData.start_date}\n              onChange={handleChange}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"end_date\"\n              label=\"Bitiş Tarihi\"\n              type=\"datetime-local\"\n              value={formData.end_date}\n              onChange={handleChange}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>İptal</Button>\n          <Button onClick={handleSubmit} variant=\"contained\">\n            {editMode ? 'Güncelle' : 'Gönder'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog\n        open={deleteConfirmationOpen}\n        onClose={() => setDeleteConfirmationOpen(false)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"İzin İsteğini Sil\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            İzin isteğini silmek istediğinizden emin misiniz?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setDeleteConfirmationOpen(false)}>İptal</Button>\n          <Button onClick={handleDelete} autoFocus color='error'>\n            Sil\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Snackbar open={!!error} autoHideDuration={6000} onClose={() => setError(null)}>\n        <Alert onClose={() => setError(null)} severity=\"error\" sx={{ width: '100%' }}>\n          {error}\n        </Alert>\n      </Snackbar>\n      <Snackbar open={success} autoHideDuration={6000} onClose={() => setSuccess(false)}>\n        <Alert onClose={() => setSuccess(false)} severity=\"success\" sx={{ width: '100%' }}>\n          {editMode ? 'İzin isteği başarıyla güncellendi.' : 'İzin isteği başarıyla gönderildi.'}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n}\n\nexport default LeaveRequests;","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Box,\n  Button,\n  Container,\n  TextField,\n  Typography,\n  Paper,\n  styled,\n} from '@mui/material';\nimport { useAuth } from '../contexts/AuthContext';\n\n// Arka plan resmini stilize edilmiş bir Box bileşeni ile ekliyoruz\nconst BackgroundBox = styled(Box)({\n  backgroundImage: `url('https://www.softwareaggov.com/wp-content/uploads/2020/12/IOT-Icons.jpeg')`, // Rastgele ofis/çalışma yeri resmi\n  backgroundSize: 'cover',\n  backgroundPosition: 'center',\n  minHeight: '100vh',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n});\n\nfunction Login() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const { login } = useAuth();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    try {\n      const success = await login(email, password);\n      if (success) {\n        navigate('/');\n      } else {\n        setError('Geçersiz e-posta veya şifre');\n      }\n    } catch (err) {\n      setError('Giriş sırasında bir hata oluştu');\n    }\n  };\n\n  return (\n    <BackgroundBox>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <Paper elevation={3} sx={{ p: 4, width: '100%', backdropFilter: 'blur(5px)', backgroundColor: 'rgba(255, 255, 255, 0.8)' }}>\n          <Typography component=\"h1\" variant=\"h5\" align=\"center\" gutterBottom>\n            PDKS Giriş\n          </Typography>\n          <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"E-posta Adresi\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              error={!!error}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Şifre\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              error={!!error}\n              helperText={error}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Giriş Yap\n            </Button>\n          </Box>\n        </Paper>\n      </Container>\n    </BackgroundBox>\n  );\n}\n\nexport default Login;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nfunction SalaryCalculator() {\r\n  const [employees, setEmployees] = useState([]);\r\n  const [employeeId, setEmployeeId] = useState('');\r\n  const [baseSalary, setBaseSalary] = useState(null);\r\n  const [overtimeRate, setOvertimeRate] = useState(null);\r\n  const [overtimeHours, setOvertimeHours] = useState('');\r\n  const [totalSalary, setTotalSalary] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchEmployees = async () => {\r\n      try {\r\n        const response = await axios.get('http://89.252.184.134:5001/employee');\r\n        setEmployees(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching employees:', error);\r\n        setMessage('Çalışanlar alınamadı.');\r\n      }\r\n    };\r\n\r\n    fetchEmployees();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (employeeId) {\r\n      fetchOvertimeHoursData();\r\n    }\r\n  }, [employeeId]);\r\n\r\n  const fetchBaseSalary = async () => {\r\n    try {\r\n      const response = await axios.get(`http://89.252.184.134:5001/employee/${employeeId}/base-salary`);\r\n      setBaseSalary(response.data.base_salary);\r\n      const hourlyRate = response.data.base_salary / 160;\r\n      setOvertimeRate(hourlyRate * 1.5);\r\n    } catch (error) {\r\n      console.error('Error fetching base salary:', error);\r\n      setMessage('Çalışan bulunamadı veya temel maaş alınamadı.');\r\n      setBaseSalary(null);\r\n      setOvertimeRate(null);\r\n    }\r\n  };\r\n\r\n  const fetchOvertimeHoursData = async () => {\r\n    try {\r\n      const response = await axios.get(`http://89.252.184.134:5001/attendance/${employeeId}`);\r\n      const currentDate = new Date();\r\n      const currentMonth = currentDate.toISOString().slice(0, 7); // YYYY-MM formatında\r\n\r\n      const currentMonthOvertime = response.data.find(item => item.Month === currentMonth);\r\n      if (currentMonthOvertime) {\r\n        setOvertimeHours(currentMonthOvertime.OvertimeHours.toString());\r\n      } else {\r\n        setOvertimeHours('0'); // Bu ay için fazla mesai yoksa 0 olarak ayarla\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching overtime data:', error);\r\n      setMessage('Fazla mesai saatleri alınamadı.');\r\n      setOvertimeHours('0'); // Hata durumunda fazla mesaiyi 0 olarak ayarla\r\n    }\r\n  };\r\n\r\n  const handleCalculateSalary = async () => {\r\n    if (baseSalary === null || overtimeRate === null) {\r\n      setMessage('Lütfen önce temel maaşı alın.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('http://89.252.184.134:5001/calculate-salary', {\r\n        employee_id: employeeId,\r\n        base_salary: parseFloat(baseSalary),\r\n        overtime_rate: parseFloat(overtimeRate),\r\n        overtime_hours: parseFloat(overtimeHours),\r\n      });\r\n\r\n      setTotalSalary(response.data.total_salary);\r\n      setMessage(response.data.message);\r\n    } catch (error) {\r\n      console.error('Error calculating salary:', error);\r\n      setMessage('Maaş hesaplanırken bir hata oluştu.');\r\n      setTotalSalary(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1, padding: 3 }}>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          MAAŞ HESAPLAMA\r\n        </Typography>\r\n        <Paper elevation={3} sx={{ padding: 3 }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"employee-id-label\">Çalışan Seçin</InputLabel>\r\n                <Select\r\n                  labelId=\"employee-id-label\"\r\n                  id=\"employee-id\"\r\n                  value={employeeId}\r\n                  label=\"Çalışan Seçin\"\r\n                  onChange={(e) => setEmployeeId(e.target.value)}\r\n                >\r\n                  {employees.map((employee) => (\r\n                    <MenuItem key={employee.employee_id} value={employee.employee_id}>\r\n                      {employee.employee_name} ({employee.employee_id})\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={fetchBaseSalary}>\r\n                Temel Maaşı Al\r\n              </Button>\r\n            </Grid>\r\n            {baseSalary !== null && (\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  label=\"Temel Maaş\"\r\n                  variant=\"outlined\"\r\n                  value={baseSalary}\r\n                  fullWidth\r\n                  disabled\r\n                />\r\n              </Grid>\r\n            )}\r\n            {overtimeRate !== null && (\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  label=\"Fazla Mesai Ücreti\"\r\n                  variant=\"outlined\"\r\n                  value={overtimeRate}\r\n                  fullWidth\r\n                  disabled\r\n                />\r\n              </Grid>\r\n            )}\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                label=\"Fazla Mesai Saati\"\r\n                variant=\"outlined\"\r\n                value={overtimeHours}\r\n                onChange={(e) => setOvertimeHours(e.target.value)}\r\n                fullWidth\r\n                type=\"number\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleCalculateSalary}>\r\n                Maaş Hesapla\r\n              </Button>\r\n            </Grid>\r\n            {message && (\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"body1\" color={totalSalary !== null ? 'success' : 'error'}>\r\n                  {message}\r\n                </Typography>\r\n              </Grid>\r\n            )}\r\n            {totalSalary !== null && (\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h6\">Toplam Maaş: {totalSalary}</Typography>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SalaryCalculator;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Box,\r\n    Paper,\r\n    Grid,\r\n    Typography,\r\n    TextField,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    TablePagination,\r\n    styled,\r\n    Button,\r\n    Snackbar,\r\n    Alert,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogActions,\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nconst StyledPaper = styled(Paper)(({ theme }) => ({\r\n    padding: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n}));\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n    fontWeight: 'bold',\r\n}));\r\n\r\nfunction RfidCardsPage() {\r\n    const [rfidCards, setRfidCards] = useState([]);\r\n    const [newCardId, setNewCardId] = useState('');\r\n    const [selectedCardId, setSelectedCardId] = useState('');\r\n    const [updateCardId, setUpdateCardId] = useState('');\r\n    const [deleteCardId, setDeleteCardId] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n    const [snackbarSeverity, setSnackbarSeverity] = useState('success');\r\n    const [confirmDialogOpen, setConfirmDialogOpen] = useState(false);\r\n    const [pendingAction, setPendingAction] = useState(null);\r\n    const [pendingActionData, setPendingActionData] = useState(null);\r\n    const [selectedCardDetails, setSelectedCardDetails] = useState(null);\r\n    const [isGetCardDetailsOpen, setIsGetCardDetailsOpen] = useState(false);\r\n\r\n    const apiBaseUrl = 'http://89.252.184.134:5001';\r\n\r\n    useEffect(() => {\r\n        fetchRfidCards();\r\n    }, []);\r\n\r\n    const fetchRfidCards = () => {\r\n        axios.get(`${apiBaseUrl}/rfidcard`)\r\n            .then(response => setRfidCards(response.data))\r\n            .catch(err => {\r\n                console.error('RFID kartları alınırken hata oluştu:', err);\r\n                setError('RFID kartları alınırken bir hata oluştu.');\r\n                setSnackbarSeverity('error');\r\n                setSnackbarOpen(true);\r\n            });\r\n    };\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setMessage('');\r\n        setError('');\r\n        if (name === 'newCardId') {\r\n            setNewCardId(value);\r\n        } else if (name === 'selectedCardId') {\r\n            setSelectedCardId(value);\r\n        } else if (name === 'updateCardId') {\r\n            setUpdateCardId(value);\r\n        } else if (name === 'deleteCardId') {\r\n            setDeleteCardId(value);\r\n        }\r\n    };\r\n\r\n    const showSnackbar = (severity, msg) => {\r\n        setSnackbarSeverity(severity);\r\n        setMessage('');\r\n        setError('');\r\n        if (severity === 'success') {\r\n            setMessage(msg);\r\n        } else {\r\n            setError(msg);\r\n        }\r\n        setSnackbarOpen(true);\r\n    };\r\n\r\n    const handleCloseSnackbar = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n    const handleOpenConfirmDialog = (action, data = null) => {\r\n        setPendingAction(action);\r\n        setPendingActionData(data);\r\n        setConfirmDialogOpen(true);\r\n    };\r\n\r\n    const handleCloseConfirmDialog = () => {\r\n        setConfirmDialogOpen(false);\r\n        setPendingAction(null);\r\n        setPendingActionData(null);\r\n    };\r\n\r\n    const handleConfirmAction = () => {\r\n        if (pendingAction === 'add') {\r\n            handleAddCardConfirmed();\r\n        } else if (pendingAction === 'update') {\r\n            handleUpdateCardConfirmed();\r\n        } else if (pendingAction === 'delete') {\r\n            handleDeleteCardConfirmed();\r\n        }\r\n        handleCloseConfirmDialog();\r\n    };\r\n\r\n    const handleAddCard = () => {\r\n        if (!newCardId) {\r\n            showSnackbar('warning', 'Lütfen bir kart ID girin.');\r\n            return;\r\n        }\r\n        handleOpenConfirmDialog('add', { card_id: newCardId });\r\n    };\r\n\r\n    const handleAddCardConfirmed = () => {\r\n        axios.post(`${apiBaseUrl}/rfidcards`, { card_id: newCardId })\r\n            .then(response => {\r\n                showSnackbar('success', response.data.message);\r\n                setNewCardId('');\r\n                fetchRfidCards();\r\n            })\r\n            .catch(err => {\r\n                console.error('RFID kartı eklenirken hata oluştu:', err);\r\n                showSnackbar('error', err.response?.data?.message || 'RFID kartı eklenirken bir hata oluştu.');\r\n            });\r\n    };\r\n\r\n    const handleGetCard = () => {\r\n        if (!selectedCardId) {\r\n            showSnackbar('warning', 'Lütfen bir kart ID girin.');\r\n            return;\r\n        }\r\n        axios.get(`${apiBaseUrl}/rfidcards/${selectedCardId}`)\r\n            .then(response => {\r\n                setSelectedCardDetails(response.data);\r\n                setIsGetCardDetailsOpen(true);\r\n            })\r\n            .catch(err => {\r\n                console.error('RFID kart detayları alınırken hata oluştu:', err);\r\n                showSnackbar('error', err.response?.data?.message || 'RFID kart detayları bulunamadı.');\r\n                setSelectedCardDetails(null);\r\n                setIsGetCardDetailsOpen(false);\r\n            });\r\n    };\r\n\r\n    const handleCloseGetCardDetails = () => {\r\n        setIsGetCardDetailsOpen(false);\r\n        setSelectedCardDetails(null);\r\n        setSelectedCardId('');\r\n    };\r\n\r\n    const handleUpdateCard = () => {\r\n        if (!selectedCardId || !updateCardId) {\r\n            showSnackbar('warning', 'Lütfen güncellenecek kart ID ve yeni kart ID girin.');\r\n            return;\r\n        }\r\n        handleOpenConfirmDialog('update', { selectedCardId, updateCardId });\r\n    };\r\n\r\n    const handleUpdateCardConfirmed = () => {\r\n        axios.put(`${apiBaseUrl}/rfidcards/${pendingActionData.selectedCardId}`, { card_id: pendingActionData.updateCardId })\r\n            .then(response => {\r\n                showSnackbar('success', response.data.message);\r\n                setSelectedCardId('');\r\n                setUpdateCardId('');\r\n                fetchRfidCards();\r\n            })\r\n            .catch(err => {\r\n                console.error('RFID kartı güncellenirken hata oluştu:', err);\r\n                showSnackbar('error', err.response?.data?.message || 'RFID kartı güncellenirken bir hata oluştu.');\r\n            });\r\n    };\r\n\r\n    const handleDeleteCard = () => {\r\n        if (!deleteCardId) {\r\n            showSnackbar('warning', 'Lütfen silinecek kart ID girin.');\r\n            return;\r\n        }\r\n        handleOpenConfirmDialog('delete', { deleteCardId });\r\n    };\r\n\r\n    const handleDeleteCardConfirmed = () => {\r\n        axios.delete(`${apiBaseUrl}/rfidcards/${pendingActionData.deleteCardId}`)\r\n            .then(response => {\r\n                showSnackbar('success', response.data.message);\r\n                setDeleteCardId('');\r\n                fetchRfidCards();\r\n            })\r\n            .catch(err => {\r\n                console.error('RFID kartı silinirken hata oluştu:', err);\r\n                showSnackbar('error', err.response?.data?.message || 'RFID kartı silinirken bir hata oluştu.');\r\n            });\r\n    };\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ flexGrow: 1, padding: 3 }}>\r\n            <Typography variant=\"h4\" gutterBottom>\r\n                RFID Kart Yönetimi\r\n            </Typography>\r\n\r\n            <StyledPaper elevation={3}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    RFID Kart Listesi\r\n                </Typography>\r\n                <TableContainer>\r\n                    <Table aria-label=\"rfid cards table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <StyledTableCell>Kart ID</StyledTableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {rfidCards.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((card) => (\r\n                                <TableRow key={card.card_id}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {card.card_id}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    component=\"div\"\r\n                    count={rfidCards.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                />\r\n            </StyledPaper>\r\n\r\n            <StyledPaper elevation={3}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    RFID Kart İşlemleri\r\n                </Typography>\r\n                <Grid container spacing={2} alignItems=\"center\">\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <TextField\r\n                            label=\"Yeni Kart ID\"\r\n                            variant=\"outlined\"\r\n                            name=\"newCardId\"\r\n                            value={newCardId}\r\n                            onChange={handleInputChange}\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                        />\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={handleAddCard} fullWidth>\r\n                            Ekle\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <TextField\r\n                            label=\"Kart ID\"\r\n                            variant=\"outlined\"\r\n                            name=\"selectedCardId\"\r\n                            value={selectedCardId}\r\n                            onChange={handleInputChange}\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                        />\r\n                        <Button variant=\"contained\" color=\"info\" onClick={handleGetCard} fullWidth>\r\n                            Detayları Getir\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <TextField\r\n                            label=\"Silinecek Kart ID\"\r\n                            variant=\"outlined\"\r\n                            name=\"deleteCardId\"\r\n                            value={deleteCardId}\r\n                            onChange={handleInputChange}\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                        />\r\n                        <Button variant=\"contained\" color=\"error\" onClick={handleDeleteCard} fullWidth>\r\n                            Sil\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </StyledPaper>\r\n\r\n            <StyledPaper elevation={3}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    RFID Kart Güncelle\r\n                </Typography>\r\n                <Grid container spacing={2} alignItems=\"center\">\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <TextField\r\n                            label=\"Güncellenecek Kart ID\"\r\n                            variant=\"outlined\"\r\n                            name=\"selectedCardId\"\r\n                            value={selectedCardId}\r\n                            onChange={handleInputChange}\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <TextField\r\n                            label=\"Yeni Kart ID\"\r\n                            variant=\"outlined\"\r\n                            name=\"updateCardId\"\r\n                            value={updateCardId}\r\n                            onChange={handleInputChange}\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <Button variant=\"contained\" color=\"warning\" onClick={handleUpdateCard} fullWidth>\r\n                            Güncelle\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </StyledPaper>\r\n\r\n            {/* Bildirim (Toast) */}\r\n            <Snackbar\r\n                open={snackbarOpen}\r\n                autoHideDuration={3000}\r\n                onClose={handleCloseSnackbar}\r\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n            >\r\n                <Alert onClose={handleCloseSnackbar} severity={snackbarSeverity} sx={{ width: '100%' }}>\r\n                    {message || error}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n            {/* Onay Diyaloğu */}\r\n            {confirmDialogOpen && (\r\n                <Dialog\r\n                    open={confirmDialogOpen}\r\n                    onClose={handleCloseConfirmDialog}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">\r\n                        {pendingAction === 'add' && 'Yeni Kart Ekleme Onayı'}\r\n                        {pendingAction === 'update' && 'Kart Güncelleme Onayı'}\r\n                        {pendingAction === 'delete' && 'Kart Silme Onayı'}\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            {pendingAction === 'add' &&\r\n                                `\"${pendingActionData?.card_id}\" ID'li yeni kartı eklemek istediğinize emin misiniz?`}\r\n                            {pendingAction === 'update' &&\r\n                                `\"${pendingActionData?.selectedCardId}\" ID'li kartın ID'sini \"${pendingActionData?.updateCardId}\" olarak güncellemek istediğinize emin misiniz?`}\r\n                            {pendingAction === 'delete' &&\r\n                                `\"${pendingActionData?.deleteCardId}\" ID'li kartı silmek istediğinize emin misiniz? Bu işlem geri alınamaz.`}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleCloseConfirmDialog}>İptal</Button>\r\n                        <Button onClick={handleConfirmAction} autoFocus>\r\n                            Onayla\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            )}\r\n\r\n            {/* RFID Kart Detayları Diyaloğu */}\r\n            <Dialog\r\n                open={isGetCardDetailsOpen}\r\n                onClose={handleCloseGetCardDetails}\r\n                aria-labelledby=\"rfid-card-details-title\"\r\n                aria-describedby=\"rfid-card-details-description\"\r\n            >\r\n                <DialogTitle id=\"rfid-card-details-title\">RFID Kart Detayları</DialogTitle>\r\n                <DialogContent>\r\n                    {selectedCardDetails ? (\r\n                        <TableContainer>\r\n                            <Table aria-label=\"rfid card details\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <StyledTableCell>Alan</StyledTableCell>\r\n                                        <StyledTableCell>Değer</StyledTableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    <TableRow key=\"employee_id\">\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            Çalışan ID\r\n                                        </TableCell>\r\n                                        <TableCell>{selectedCardDetails.employee_id}</TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow key=\"first_name\">\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            Adı\r\n                                        </TableCell>\r\n                                        <TableCell>{selectedCardDetails.first_name}</TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow key=\"last_name\">\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            Soyadı\r\n                                        </TableCell>\r\n                                        <TableCell>{selectedCardDetails.last_name}</TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow key=\"rfid_card_id\">\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            RFID Kart ID\r\n                                        </TableCell>\r\n                                        <TableCell>{selectedCardDetails.rfid_card_id}</TableCell>\r\n                                    </TableRow>\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    ) : (\r\n                        <Typography>Kart detayları yükleniyor...</Typography>\r\n                    )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCloseGetCardDetails}>Kapat</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default RfidCardsPage;","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Layout from './components/Layout';\nimport Dashboard from './pages/Dashboard';\nimport Employees from './pages/Employees';\nimport Attendance from './pages/Attendance';\nimport LeaveRequests from './pages/LeaveRequests';\nimport Login from './pages/Login';\nimport { AuthProvider } from './contexts/AuthContext';\nimport SalaryCalculator from './pages/Salary';\nimport RfidCards from './pages/RfidCards';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#1976d2',\n    },\n    secondary: {\n      main: '#dc004e',\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AuthProvider>\n        <Router>\n          <Routes>\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/\" element={<Layout />}>\n              <Route index element={<Dashboard />} />\n              <Route path=\"employees\" element={<Employees />} />\n              <Route path=\"attendance\" element={<Attendance />} />\n              <Route path=\"leave-requests\" element={<LeaveRequests />} />\n              <Route path=\"salary\" element={<SalaryCalculator />} />\n              <Route path=\"rfidcards\" element={<RfidCards />} />\n\n            </Route>\n          </Routes>\n        </Router>\n      </AuthProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}